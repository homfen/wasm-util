!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var o in r)("object"==typeof exports?exports:e)[o]=r[o]}}(self,(function(){return(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};let r;e.r(t),e.d(t,{ready:()=>o,yuv2rgb:()=>l,yuv2rgba:()=>i,yuv2bgr:()=>s,rgb2yuv:()=>c,rgba2bgr:()=>u,superpixel:()=>a});let o=!1;const n="object"==typeof window?window:self;!async function e(){n.createModule?(r=await n.createModule({},""),o=!0):setTimeout(e,200)}();const l=(e,t,o,n,l,s,i,c=!1,u=!1)=>{if(!r)return;const a=r._malloc(o.length);r.HEAP8.set(o,a);const f=r._malloc(n.length);r.HEAP8.set(n,f);const g=r._malloc(l.length);r.HEAP8.set(l,g);const P=(c?r._yuv2bgr:u?r._yuv2rgba:r._yuv2rgb)(e,t,a,f,g,s,i),_=r.HEAPU32[P/4],d=r.HEAPU32[P/4+1],b=r.HEAPU32[P/4+2],A=r.HEAPU8.slice(b,b+_*d*(u?4:3));return r._free(a),r._free(f),r._free(g),r._flush_imagedata(P),{width:e,height:t,[c?"bgr":"rgb"]:A}},s=(e,t,r,o,n,s,i)=>l(e,t,r,o,n,s,i,!0),i=(e,t,r,o,n,s,i)=>l(e,t,r,o,n,s,i,!1,!0),c=(e,t,o,n)=>{if(!r)return;const l=r._malloc(o.length);r.HEAP8.set(o,l);const s=r._rgb2yuv(e,t,l,n),i=r.HEAPU32[s/4],c=r.HEAPU32[s/4+1],u=r.HEAPU32[s/4+2],a=r.HEAPU32[s/4+3],f=r.HEAPU32[s/4+4],g=r.HEAPU32[s/4+5],P=r.HEAPU32[s/4+6],_=r.HEAPU8.slice(u,u+g*t),d=r.HEAPU8.slice(a,a+P*t/2),b=r.HEAPU8.slice(f,f+P*t/2);return r._free(l),r._flush_yuvdata(s),{width:i,height:c,stride_y:g,stride_uv:P,y:_,u:d,v:b}},u=(e,t,o)=>{if(!r)return;const n=r._malloc(o.length);r.HEAP8.set(o,n);const l=r._rgba2bgr(e,t,n),s=r.HEAPU32[l/4],i=r.HEAPU32[l/4+1],c=r.HEAPU32[l/4+2],u=r.HEAPU8.slice(c,c+s*i*3);return r._free(n),r._flush_imagedata(l),{width:s,height:i,bgr:u}},a=(e,t,o,n)=>{const l=r._malloc(n.length);r.HEAP8.set(n,l);const s=r._superpixel(e,t,o,l),i=r.HEAPU32[s/4],c=r.HEAPU32[s/4+1],u=r.HEAPU32.slice(i/4,i/4+e*t),a=r.HEAPU32.slice(c/4,c/4+e*t);return r._free(l),r._flush_pixel(s),{region:u,border:a}};return t})()}));